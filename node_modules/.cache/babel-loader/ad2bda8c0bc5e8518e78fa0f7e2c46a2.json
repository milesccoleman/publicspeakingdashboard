{"remainingRequest":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/thread-loader/dist/cjs.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue","mtime":1679093972000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/babel.config.js","mtime":1679095009000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwdWJsaWNTcGVha2luZ0Rhc2hib2FyZCcsCiAgcHJvcHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtc2c6ICdQdWJsaWMgU3BlYWtpbmcgRGFzaGJvYXJkJywKICAgICAgd29yZHNTcG9rZW46ICcnLAogICAgICBvdXRwdXQ6ICdSZWNvZ25pemVkIFRleHQnLAogICAgICBpbml0aWFsVGltZTogMCwKICAgICAgdGltZTogMCwKICAgICAgdGltZUVsYXBzZWQ6IDAsCiAgICAgIHRpbWVEaWZmZXJlbmNlOiAwLAogICAgICB3b3JkQ291bnQ6IDAsCiAgICAgIHRvdGFsV29yZHM6IDAsCiAgICAgIHdvcmRDb3VudERpdmlkZWRCeVRpbWU6IDAsCiAgICAgIHdwbTogMAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRpYXRlVm9pY2VDb250cm9sOiBmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCd2b2ljZSByZWNvZ25pdGlvbiBpbml0aWF0ZWQnKTsKICAgICAgd2luZG93LlNwZWVjaFJlY29nbml0aW9uID0gd2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbjsKICAgICAgbGV0IGZpbmFsVHJhbnNjcmlwdCA9ICcnOwogICAgICBsZXQgcmVjb2duaXRpb24gPSBuZXcgd2luZG93LlNwZWVjaFJlY29nbml0aW9uKCk7CiAgICAgIHJlY29nbml0aW9uLmludGVyaW1SZXN1bHRzID0gdHJ1ZTsKICAgICAgcmVjb2duaXRpb24ubWF4QWx0ZXJuYXRpdmVzID0gMTA7CiAgICAgIHJlY29nbml0aW9uLmNvbnRpbnVvdXMgPSB0cnVlOwogICAgICByZWNvZ25pdGlvbi5vbnJlc3VsdCA9IGV2ZW50ID0+IHsKICAgICAgICBsZXQgaW50ZXJpbVRyYW5zY3JpcHQgPSAnJzsKICAgICAgICBmb3IgKGxldCBpID0gZXZlbnQucmVzdWx0SW5kZXgsIGxlbiA9IGV2ZW50LnJlc3VsdHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIGxldCB0cmFuc2NyaXB0ID0gZXZlbnQucmVzdWx0c1tpXVswXS50cmFuc2NyaXB0OwogICAgICAgICAgaWYgKGV2ZW50LnJlc3VsdHNbaV0uaXNGaW5hbCkgewogICAgICAgICAgICBmaW5hbFRyYW5zY3JpcHQgKz0gdHJhbnNjcmlwdDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGludGVyaW1UcmFuc2NyaXB0ICs9IHRyYW5zY3JpcHQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCJ0cmFuc2NyaXB0OiAiICsgaW50ZXJpbVRyYW5zY3JpcHQpOwogICAgICAgIHRoaXMud29yZHNTcG9rZW4gPSBmaW5hbFRyYW5zY3JpcHQ7CiAgICAgICAgdGhpcy5vdXRwdXQgPSB0aGlzLndvcmRzU3Bva2VuICs9IGludGVyaW1UcmFuc2NyaXB0OwogICAgICAgIHRoaXMud29yZENvdW50ID0gdGhpcy5jb3VudFdvcmRzKHRoaXMub3V0cHV0KTsKICAgICAgICB0aGlzLnRvdGFsV29yZHMgPSB0aGlzLndvcmRDb3VudDsKICAgICAgfTsKICAgICAgdGhpcy5pbml0aWFsVGltZSA9IERhdGUubm93KCk7CiAgICAgIHRoaXMuZ3JhYlRpbWUoKTsKICAgICAgcmVjb2duaXRpb24uc3RhcnQoKTsKICAgICAgd2luZG93LnNldEludGVydmFsKHRoaXMuZ3JhYlRpbWUsIDEwMDApOwogICAgICB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5yZWdpc3RlcldQTSwgMTAwMCk7CiAgICB9LAogICAgZ3JhYlRpbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy50aW1lRGlmZmVyZW5jZSA9IERhdGUubm93KCkgLSB0aGlzLmluaXRpYWxUaW1lOwogICAgICB2YXIgZm9ybWF0dGVkID0gY29udmVydFRpbWUodGhpcy50aW1lRGlmZmVyZW5jZSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aW1lcicpLmlubmVySFRNTCA9ICcnICsgZm9ybWF0dGVkOwogICAgICB0aGlzLnRpbWVFbGFwc2VkID0gdGhpcy50aW1lRGlmZmVyZW5jZTsKICAgICAgY29uc29sZS5sb2coIm9nIHRpbWUgZWxhcHNlZCAiICsgdGhpcy50aW1lRWxhcHNlZCk7CiAgICAgIHJldHVybiB0aGlzLnRpbWVFbGFwc2VkOwogICAgICBmdW5jdGlvbiBjb252ZXJ0VGltZShtaWxpc2Vjb25kcykgewogICAgICAgIHZhciB0b3RhbFNlY29uZHMgPSBNYXRoLmZsb29yKG1pbGlzZWNvbmRzIC8gMTAwMCk7CiAgICAgICAgdmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKHRvdGFsU2Vjb25kcyAvIDYwKTsKICAgICAgICB2YXIgc2Vjb25kcyA9IHRvdGFsU2Vjb25kcyAtIG1pbnV0ZXMgKiA2MDsKICAgICAgICByZXR1cm4gbWludXRlcyArICc6JyArIHNlY29uZHM7CiAgICAgIH0KICAgIH0sCiAgICBjb3VudFdvcmRzOiBmdW5jdGlvbiAoc3RyKSB7CiAgICAgIGNvbnN0IGFyciA9IHN0ci5zcGxpdCgnICcpOwogICAgICByZXR1cm4gYXJyLmZpbHRlcih3b3JkID0+IHdvcmQgIT09ICcnKS5sZW5ndGg7CiAgICB9LAogICAgcmVnaXN0ZXJXUE06IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy53cG0gPSBNYXRoLnJvdW5kKHRoaXMud29yZENvdW50IC8gKHRoaXMudGltZUVsYXBzZWQgLyAxMDAwKSAqIDYwKTsKICAgICAgY29uc29sZS5sb2coInRpbWUgZWxhcHNlZCAiICsgdGhpcy50aW1lRWxhcHNlZCk7CiAgICAgIGNvbnNvbGUubG9nKCJ3b3JkIGNvdW50ICIgKyB0aGlzLndvcmRDb3VudCk7CiAgICB9CiAgfSAvLwp9OyAvLw=="},{"version":3,"names":["name","props","data","msg","wordsSpoken","output","initialTime","time","timeElapsed","timeDifference","wordCount","totalWords","wordCountDividedByTime","wpm","methods","initiateVoiceControl","console","log","window","SpeechRecognition","webkitSpeechRecognition","finalTranscript","recognition","interimResults","maxAlternatives","continuous","onresult","event","interimTranscript","i","resultIndex","len","results","length","transcript","isFinal","countWords","Date","now","grabTime","start","setInterval","registerWPM","formatted","convertTime","document","getElementById","innerHTML","miliseconds","totalSeconds","Math","floor","minutes","seconds","str","arr","split","filter","word","round"],"sources":["src/components/PublicSpeakingDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>{{ msg }}</h1>\n    <p id=\"timer\">\n\t\t{{ time }} <br>\n\t\tTime\n    </p>\n    <p id=\"totalWords\">\n\t\t{{ totalWords }} <br>\n\t\tTotal Words Detected\n    </p>\n     <p id=\"wpm\">\n\t\t{{ wpm }} <br>\n\t\tOverall Average Words Per Minute\n    </p>\n    <button v-on:click=\"initiateVoiceControl\">Start</button>    \n    <p id=\"output\">\n      {{ output }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'publicSpeakingDashboard',\n  props: {\n  }, \n  data () {\n\t\treturn {\n\t\t\tmsg: 'Public Speaking Dashboard', \n\t\t\twordsSpoken: '', \n\t\t\toutput: 'Recognized Text',\n\t\t\tinitialTime: 0,  \n\t\t\ttime: 0,\n\t\t\ttimeElapsed: 0, \n\t\t\ttimeDifference: 0, \n\t\t\twordCount: 0,\n\t\t\ttotalWords: 0, \n\t\t\twordCountDividedByTime: 0,\n\t\t\twpm: 0\n\t\t}\n\t}, \n\n\tmethods: {\n\t\n\t\tinitiateVoiceControl: function () {\n\t\t\tconsole.log('voice recognition initiated')\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet finalTranscript = '';\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.interimResults = true;\n\t\t\trecognition.maxAlternatives = 10;\n\t\t\trecognition.continuous = true;\n\t\t\trecognition.onresult = (event) => {\n\t\t\t\tlet interimTranscript = '';\n\t\t\t\tfor (let i = event.resultIndex, len = event.results.length; i < len; i++) {\n\t\t\t\t\tlet transcript = event.results[i][0].transcript;\n\t\t\t\t\tif (event.results[i].isFinal) {\n\t\t\t\t\t\tfinalTranscript += transcript;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinterimTranscript += transcript;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"transcript: \" + interimTranscript)\n\t\t\t\tthis.wordsSpoken = finalTranscript\n\t\t\t\tthis.output =  this.wordsSpoken += interimTranscript\n\t\t\t\tthis.wordCount = this.countWords(this.output)\n\t\t\t\tthis.totalWords = this.wordCount\n\t\t\t\t}\n\t\tthis.initialTime = Date.now();\n\t\tthis.grabTime()\n\t\trecognition.start()\n\t\twindow.setInterval(this.grabTime, 1000)\n\t\twindow.setInterval(this.registerWPM, 1000)\n\t\t},\n\t\n\t\tgrabTime: function () {\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\t\t\tvar formatted = convertTime(this.timeDifference);\n\t\t\t\t\tdocument.getElementById('timer').innerHTML = '' + formatted;\n\t\t\t\t\tthis.timeElapsed = this.timeDifference\n\t\t\t\t\tconsole.log(\"og time elapsed \" + this.timeElapsed)\n\t\t\t\t\treturn this.timeElapsed\n\t\t\t\t\n\t\t\t\tfunction convertTime(miliseconds) {\n\t\t\t\t\tvar totalSeconds = Math.floor(miliseconds/1000);\n\t\t\t\t\tvar minutes = Math.floor(totalSeconds/60);\n\t\t\t\t\tvar seconds = totalSeconds - minutes * 60;\n\t\t\t\t\treturn minutes + ':' + seconds;\n\t\t\t\t}\n\t\t},\n\t\t\n\t\t\n\t\t\n\t\tcountWords: function (str){\n\t\t\tconst arr = str.split(' ');\n\t\t\treturn arr.filter(word => word !== '').length;\n\t\t}, \n\t\t\n\t\tregisterWPM: function () {\n\t\tthis.wpm = Math.round(this.wordCount/(this.timeElapsed/1000) * 60) \n\t\t\tconsole.log(\"time elapsed \" + this.timeElapsed)\t\n\t\t\tconsole.log(\"word count \" + this.wordCount)\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\n\t\n\t\n\t\n\t}//\n}//\t\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAwBA;EACAA,IAAA;EACAC,KAAA,GACA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,WAAA;MACAC,MAAA;MACAC,WAAA;MACAC,IAAA;MACAC,WAAA;MACAC,cAAA;MACAC,SAAA;MACAC,UAAA;MACAC,sBAAA;MACAC,GAAA;IACA;EACA;EAEAC,OAAA;IAEAC,oBAAA,WAAAA,CAAA;MACAC,OAAA,CAAAC,GAAA;MACAC,MAAA,CAAAC,iBAAA,GAAAD,MAAA,CAAAE,uBAAA,IAAAF,MAAA,CAAAC,iBAAA;MACA,IAAAE,eAAA;MACA,IAAAC,WAAA,OAAAJ,MAAA,CAAAC,iBAAA;MACAG,WAAA,CAAAC,cAAA;MACAD,WAAA,CAAAE,eAAA;MACAF,WAAA,CAAAG,UAAA;MACAH,WAAA,CAAAI,QAAA,GAAAC,KAAA;QACA,IAAAC,iBAAA;QACA,SAAAC,CAAA,GAAAF,KAAA,CAAAG,WAAA,EAAAC,GAAA,GAAAJ,KAAA,CAAAK,OAAA,CAAAC,MAAA,EAAAJ,CAAA,GAAAE,GAAA,EAAAF,CAAA;UACA,IAAAK,UAAA,GAAAP,KAAA,CAAAK,OAAA,CAAAH,CAAA,KAAAK,UAAA;UACA,IAAAP,KAAA,CAAAK,OAAA,CAAAH,CAAA,EAAAM,OAAA;YACAd,eAAA,IAAAa,UAAA;UACA;YACAN,iBAAA,IAAAM,UAAA;UACA;QACA;QACAlB,OAAA,CAAAC,GAAA,kBAAAW,iBAAA;QACA,KAAAxB,WAAA,GAAAiB,eAAA;QACA,KAAAhB,MAAA,QAAAD,WAAA,IAAAwB,iBAAA;QACA,KAAAlB,SAAA,QAAA0B,UAAA,MAAA/B,MAAA;QACA,KAAAM,UAAA,QAAAD,SAAA;MACA;MACA,KAAAJ,WAAA,GAAA+B,IAAA,CAAAC,GAAA;MACA,KAAAC,QAAA;MACAjB,WAAA,CAAAkB,KAAA;MACAtB,MAAA,CAAAuB,WAAA,MAAAF,QAAA;MACArB,MAAA,CAAAuB,WAAA,MAAAC,WAAA;IACA;IAEAH,QAAA,WAAAA,CAAA;MAGA,KAAA9B,cAAA,GAAA4B,IAAA,CAAAC,GAAA,UAAAhC,WAAA;MACA,IAAAqC,SAAA,GAAAC,WAAA,MAAAnC,cAAA;MACAoC,QAAA,CAAAC,cAAA,UAAAC,SAAA,QAAAJ,SAAA;MACA,KAAAnC,WAAA,QAAAC,cAAA;MACAO,OAAA,CAAAC,GAAA,2BAAAT,WAAA;MACA,YAAAA,WAAA;MAEA,SAAAoC,YAAAI,WAAA;QACA,IAAAC,YAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,WAAA;QACA,IAAAI,OAAA,GAAAF,IAAA,CAAAC,KAAA,CAAAF,YAAA;QACA,IAAAI,OAAA,GAAAJ,YAAA,GAAAG,OAAA;QACA,OAAAA,OAAA,SAAAC,OAAA;MACA;IACA;IAIAjB,UAAA,WAAAA,CAAAkB,GAAA;MACA,MAAAC,GAAA,GAAAD,GAAA,CAAAE,KAAA;MACA,OAAAD,GAAA,CAAAE,MAAA,CAAAC,IAAA,IAAAA,IAAA,SAAAzB,MAAA;IACA;IAEAS,WAAA,WAAAA,CAAA;MACA,KAAA7B,GAAA,GAAAqC,IAAA,CAAAS,KAAA,MAAAjD,SAAA,SAAAF,WAAA;MACAQ,OAAA,CAAAC,GAAA,wBAAAT,WAAA;MACAQ,OAAA,CAAAC,GAAA,sBAAAP,SAAA;IAIA;EAKA;AACA"}]}