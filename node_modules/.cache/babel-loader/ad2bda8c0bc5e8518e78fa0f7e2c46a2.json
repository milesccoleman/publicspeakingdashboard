{"remainingRequest":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/thread-loader/dist/cjs.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue","mtime":1679252550000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/babel.config.js","mtime":1679245948000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1679245951000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/thread-loader/dist/cjs.js","mtime":1679245970000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js","mtime":1679245950000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1679245951000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js","mtime":1679245971000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwdWJsaWNTcGVha2luZ0Rhc2hib2FyZCcsCiAgcHJvcHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtc2c6ICdQdWJsaWMgU3BlYWtpbmcgRGFzaGJvYXJkJywKICAgICAgd29yZHNTcG9rZW46ICcnLAogICAgICBvdXRwdXQ6ICdSZWNvZ25pemVkIFRleHQnLAogICAgICBncmFiVGltZUludGVydmFsOiAnJywKICAgICAgcmVnaXN0ZXJXUE1JbnRlcnZhbDogJycsCiAgICAgIGluaXRpYWxUaW1lOiAwLAogICAgICB0aW1lOiAwLAogICAgICB0aW1lRWxhcHNlZDogMCwKICAgICAgdGltZURpZmZlcmVuY2U6IDAsCiAgICAgIHdvcmRDb3VudDogMCwKICAgICAgdG90YWxXb3JkczogMCwKICAgICAgd29yZENvdW50RGl2aWRlZEJ5VGltZTogMCwKICAgICAgc3RvcDogZmFsc2UsCiAgICAgIHdwbTogMCwKICAgICAgY29uaW51b3VzOiB0cnVlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgd2luZG93LlNwZWVjaFJlY29nbml0aW9uID0gd2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbjsKICAgIGxldCByZWNvZ25pdGlvbiA9IG5ldyB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb24oKTsKICAgIHJlY29nbml0aW9uLnN0YXJ0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWF0ZVZvaWNlQ29udHJvbDogZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygndm9pY2UgcmVjb2duaXRpb24gaW5pdGlhdGVkJyk7CiAgICAgIHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbiA9IHdpbmRvdy53ZWJraXRTcGVlY2hSZWNvZ25pdGlvbiB8fCB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb247CiAgICAgIGxldCBmaW5hbFRyYW5zY3JpcHQgPSAnJzsKICAgICAgbGV0IHJlY29nbml0aW9uID0gbmV3IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbigpOwogICAgICByZWNvZ25pdGlvbi5pbnRlcmltUmVzdWx0cyA9IHRydWU7CiAgICAgIHJlY29nbml0aW9uLm1heEFsdGVybmF0aXZlcyA9IDEwOwogICAgICByZWNvZ25pdGlvbi5jb250aW51b3VzID0gdGhpcy5jb250aW51b3VzOwogICAgICByZWNvZ25pdGlvbi5vbnJlc3VsdCA9IGV2ZW50ID0+IHsKICAgICAgICBsZXQgaW50ZXJpbVRyYW5zY3JpcHQgPSAnJzsKICAgICAgICBmb3IgKGxldCBpID0gZXZlbnQucmVzdWx0SW5kZXgsIGxlbiA9IGV2ZW50LnJlc3VsdHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIGxldCB0cmFuc2NyaXB0ID0gZXZlbnQucmVzdWx0c1tpXVswXS50cmFuc2NyaXB0OwogICAgICAgICAgaWYgKGV2ZW50LnJlc3VsdHNbaV0uaXNGaW5hbCkgewogICAgICAgICAgICBmaW5hbFRyYW5zY3JpcHQgKz0gdHJhbnNjcmlwdDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGludGVyaW1UcmFuc2NyaXB0ICs9IHRyYW5zY3JpcHQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCJ0cmFuc2NyaXB0OiAiICsgaW50ZXJpbVRyYW5zY3JpcHQpOwogICAgICAgIHRoaXMud29yZHNTcG9rZW4gPSBmaW5hbFRyYW5zY3JpcHQ7CiAgICAgICAgdGhpcy5vdXRwdXQgPSB0aGlzLndvcmRzU3Bva2VuICs9IGludGVyaW1UcmFuc2NyaXB0OwogICAgICAgIHRoaXMud29yZENvdW50ID0gdGhpcy5jb3VudFdvcmRzKHRoaXMub3V0cHV0KTsKICAgICAgICB0aGlzLnRvdGFsV29yZHMgPSB0aGlzLndvcmRDb3VudDsKICAgICAgfTsKICAgICAgaWYgKHRoaXMuc3RvcCA9PSBmYWxzZSkgewogICAgICAgIHRoaXMuaW5pdGlhbFRpbWUgPSBEYXRlLm5vdygpOwogICAgICAgIHJlY29nbml0aW9uLnN0YXJ0KCk7CiAgICAgICAgdGhpcy5ncmFiVGltZUludGVydmFsID0gd2luZG93LnNldEludGVydmFsKHRoaXMuZ3JhYlRpbWUsIDEwMDApOwogICAgICAgIHRoaXMucmVnaXN0ZXJXUE1JbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbCh0aGlzLnJlZ2lzdGVyV1BNLCAxMDAwKTsKICAgICAgfQogICAgICBpZiAodGhpcy5zdG9wID09IHRydWUpIHsKICAgICAgICByZWNvZ25pdGlvbi5hYm9ydCgpOwogICAgICAgIHRoaXMuc3RvcCA9IGZhbHNlOwogICAgICAgIGNvbnNvbGUubG9nKCJzdG9wcGVkPyIpOwogICAgICAgIHRoaXMuY29udGludW91cyA9IHRydWU7CiAgICAgIH0KICAgIH0sCiAgICBncmFiVGltZTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLnRpbWVEaWZmZXJlbmNlID0gRGF0ZS5ub3coKSAtIHRoaXMuaW5pdGlhbFRpbWU7CiAgICAgIHZhciBmb3JtYXR0ZWQgPSBjb252ZXJ0VGltZSh0aGlzLnRpbWVEaWZmZXJlbmNlKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbWVyJykuaW5uZXJIVE1MID0gJycgKyBmb3JtYXR0ZWQ7CiAgICAgIHRoaXMudGltZUVsYXBzZWQgPSB0aGlzLnRpbWVEaWZmZXJlbmNlOwogICAgICBjb25zb2xlLmxvZygib2cgdGltZSBlbGFwc2VkICIgKyB0aGlzLnRpbWVFbGFwc2VkKTsKICAgICAgcmV0dXJuIHRoaXMudGltZUVsYXBzZWQ7CiAgICAgIGZ1bmN0aW9uIGNvbnZlcnRUaW1lKG1pbGlzZWNvbmRzKSB7CiAgICAgICAgdmFyIHRvdGFsU2Vjb25kcyA9IE1hdGguZmxvb3IobWlsaXNlY29uZHMgLyAxMDAwKTsKICAgICAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3IodG90YWxTZWNvbmRzIC8gNjApOwogICAgICAgIHZhciBzZWNvbmRzID0gdG90YWxTZWNvbmRzIC0gbWludXRlcyAqIDYwOwogICAgICAgIHJldHVybiBtaW51dGVzICsgJzonICsgc2Vjb25kczsKICAgICAgfQogICAgfSwKICAgIGNvdW50V29yZHM6IGZ1bmN0aW9uIChzdHIpIHsKICAgICAgY29uc3QgYXJyID0gc3RyLnNwbGl0KCcgJyk7CiAgICAgIHJldHVybiBhcnIuZmlsdGVyKHdvcmQgPT4gd29yZCAhPT0gJycpLmxlbmd0aDsKICAgIH0sCiAgICByZWdpc3RlcldQTTogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLndwbSA9IE1hdGgucm91bmQodGhpcy53b3JkQ291bnQgLyAodGhpcy50aW1lRWxhcHNlZCAvIDEwMDApICogNjApOwogICAgICBjb25zb2xlLmxvZygidGltZSBlbGFwc2VkICIgKyB0aGlzLnRpbWVFbGFwc2VkKTsKICAgICAgY29uc29sZS5sb2coIndvcmQgY291bnQgIiArIHRoaXMud29yZENvdW50KTsKICAgIH0sCiAgICBzdG9wVm9pY2VDb250cm9sOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMuY29udGludW91cyA9IGZhbHNlOwogICAgICB0aGlzLnN0b3AgPSB0cnVlOwogICAgICB0aGlzLmluaXRpYXRlVm9pY2VDb250cm9sKCk7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5ncmFiVGltZUludGVydmFsKTsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnJlZ2lzdGVyV1BNSW50ZXJ2YWwpOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgfQogIH0gLy8KfTsgLy8="},{"version":3,"names":["name","props","data","msg","wordsSpoken","output","grabTimeInterval","registerWPMInterval","initialTime","time","timeElapsed","timeDifference","wordCount","totalWords","wordCountDividedByTime","stop","wpm","coninuous","created","window","SpeechRecognition","webkitSpeechRecognition","recognition","start","methods","initiateVoiceControl","console","log","finalTranscript","interimResults","maxAlternatives","continuous","onresult","event","interimTranscript","i","resultIndex","len","results","length","transcript","isFinal","countWords","Date","now","setInterval","grabTime","registerWPM","abort","formatted","convertTime","document","getElementById","innerHTML","miliseconds","totalSeconds","Math","floor","minutes","seconds","str","arr","split","filter","word","round","stopVoiceControl","clearInterval","reset","location","reload"],"sources":["src/components/PublicSpeakingDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>{{ msg }}</h1>\n    <p id=\"timer\">\n\t\t{{ time }} <br>\n\t\tTime\n    </p>\n    <p id=\"totalWords\">\n\t\t{{ totalWords }} <br>\n\t\tTotal Words Detected\n    </p>\n     <p id=\"wpm\">\n\t\t{{ wpm }} <br>\n\t\tOverall Average Words Per Minute\n    </p>\n    <span><button v-on:click=\"initiateVoiceControl\">Start</button><button v-on:click=\"stopVoiceControl\">Stop</button><button v-on:click=\"reset\">Reset</button></span>\n    \n    <p id=\"output\">\n      {{ output }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'publicSpeakingDashboard',\n  props: {\n  }, \n  data () {\n\t\treturn {\n\t\t\tmsg: 'Public Speaking Dashboard', \n\t\t\twordsSpoken: '', \n\t\t\toutput: 'Recognized Text',\n\t\t\tgrabTimeInterval: '', \n\t\t\tregisterWPMInterval: '', \n\t\t\tinitialTime: 0,  \n\t\t\ttime: 0,\n\t\t\ttimeElapsed: 0, \n\t\t\ttimeDifference: 0, \n\t\t\twordCount: 0,\n\t\t\ttotalWords: 0, \n\t\t\twordCountDividedByTime: 0,\n\t\t\tstop: false, \n\t\t\twpm: 0, \n\t\t\tconinuous: true\n\t\t}\n\t},\n\t\n\tcreated: function () {\n\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\tlet recognition = new window.SpeechRecognition();\n\t\trecognition.start()\n\t}, \n\n\tmethods: {\n\t\n\t\tinitiateVoiceControl: function () {\n\t\t\tconsole.log('voice recognition initiated')\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet finalTranscript = '';\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.interimResults = true; \n\t\t\trecognition.maxAlternatives = 10;\n\t\t\trecognition.continuous = this.continuous;\n\t\t\trecognition.onresult = (event) => {\n\t\t\t\tlet interimTranscript = '';\n\t\t\t\tfor (let i = event.resultIndex, len = event.results.length; i < len; i++) {\n\t\t\t\t\tlet transcript = event.results[i][0].transcript;\n\t\t\t\t\tif (event.results[i].isFinal) {\n\t\t\t\t\t\tfinalTranscript += transcript;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinterimTranscript += transcript;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"transcript: \" + interimTranscript)\n\t\t\t\tthis.wordsSpoken = finalTranscript\n\t\t\t\tthis.output =  this.wordsSpoken += interimTranscript\n\t\t\t\tthis.wordCount = this.countWords(this.output)\n\t\t\t\tthis.totalWords = this.wordCount\n\t\t\t\t}\n\t\t\n\t\t\t\tif (this.stop == false) {\n\t\t\t\t\tthis.initialTime = Date.now();\n\t\t\t\t\trecognition.start()\n\t\t\t\t\tthis.grabTimeInterval = window.setInterval(this.grabTime, 1000)\n\t\t\t\t\tthis.registerWPMInterval = window.setInterval(this.registerWPM, 1000)\n\t\t\t\t} \n\t\t\t\tif (this.stop == true) {\n\t\t\t\t\trecognition.abort()\n\t\t\t\t\tthis.stop = false\n\t\t\t\t\tconsole.log(\"stopped?\")\n\t\t\t\t\tthis.continuous = true\n\t\t\n\t\t\t\t}\n\t\t},\n\t\n\t\tgrabTime: function () {\n\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\tvar formatted = convertTime(this.timeDifference);\n\t\t\tdocument.getElementById('timer').innerHTML = '' + formatted;\n\t\t\tthis.timeElapsed = this.timeDifference\n\t\t\tconsole.log(\"og time elapsed \" + this.timeElapsed)\n\t\t\treturn this.timeElapsed\n\t\t\tfunction convertTime(miliseconds) {\n\t\t\t\tvar totalSeconds = Math.floor(miliseconds/1000);\n\t\t\t\tvar minutes = Math.floor(totalSeconds/60);\n\t\t\t\tvar seconds = totalSeconds - minutes * 60;\n\t\t\t\treturn minutes + ':' + seconds;\n\t\t\t}\n\t\t},\n\t\t\n\t\t\n\t\t\n\t\tcountWords: function (str){\n\t\t\tconst arr = str.split(' ');\n\t\t\treturn arr.filter(word => word !== '').length;\n\t\t}, \n\t\t\n\t\tregisterWPM: function () {\n\t\t\tthis.wpm = Math.round(this.wordCount/(this.timeElapsed/1000) * 60) \n\t\t\tconsole.log(\"time elapsed \" + this.timeElapsed)\t\n\t\t\tconsole.log(\"word count \" + this.wordCount)\n\t\t}, \n\t\t\n\t\tstopVoiceControl: function () {\n\t\t\tthis.continuous = false\n\t\t\tthis.stop = true\n\t\t\tthis.initiateVoiceControl()\n\t\t\tclearInterval(this.grabTimeInterval)\n\t\t\tclearInterval(this.registerWPMInterval)\n\t\t}, \n\t\n\t\treset: function () {\n\t\t\tlocation.reload()\n\t\t}\n\t\n\t\n\t\n\t\n\t}//\n}//\t\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"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"}]}