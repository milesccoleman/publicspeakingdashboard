{"remainingRequest":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue","mtime":1679428183000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/babel.config.js","mtime":1679427672000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1679427675000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js","mtime":1679427675000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1679427675000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js","mtime":1679427692000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHBhcmFsbGVsZG90cyBmcm9tICdwYXJhbGxlbGRvdHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3B1YmxpY1NwZWFraW5nRGFzaGJvYXJkJywKICBwcm9wczoge30sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1zZzogJ1B1YmxpYyBTcGVha2luZyBEYXNoYm9hcmQnLAogICAgICB3b3Jkc1Nwb2tlbjogJycsCiAgICAgIG91dHB1dDogJ1JlY29nbml6ZWQgVGV4dCcsCiAgICAgIHVzYWJsZU91dHB1dDogJycsCiAgICAgIGdyYWJUaW1lSW50ZXJ2YWw6ICcnLAogICAgICByZWdpc3RlcldQTUludGVydmFsOiAnJywKICAgICAgaW5pdGlhbFRpbWU6IDAsCiAgICAgIHRpbWU6IDAsCiAgICAgIHRpbWVFbGFwc2VkOiAwLAogICAgICB0aW1lRGlmZmVyZW5jZTogMCwKICAgICAgd29yZENvdW50OiAwLAogICAgICB0b3RhbFdvcmRzOiAwLAogICAgICB3b3JkQ291bnREaXZpZGVkQnlUaW1lOiAwLAogICAgICBzdG9wOiBmYWxzZSwKICAgICAgd3BtOiAwLAogICAgICBjb250aW51b3VzOiB0cnVlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgd2luZG93LlNwZWVjaFJlY29nbml0aW9uID0gd2luZG93LndlYmtpdFNwZWVjaFJlY29nbml0aW9uIHx8IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbjsKICAgIGxldCByZWNvZ25pdGlvbiA9IG5ldyB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb24oKTsKICAgIHJlY29nbml0aW9uLnN0YXJ0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWF0ZVZvaWNlQ29udHJvbDogZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygndm9pY2UgcmVjb2duaXRpb24gaW5pdGlhdGVkJyk7CiAgICAgIHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbiA9IHdpbmRvdy53ZWJraXRTcGVlY2hSZWNvZ25pdGlvbiB8fCB3aW5kb3cuU3BlZWNoUmVjb2duaXRpb247CiAgICAgIGxldCBmaW5hbFRyYW5zY3JpcHQgPSAnJzsKICAgICAgbGV0IHJlY29nbml0aW9uID0gbmV3IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbigpOwogICAgICByZWNvZ25pdGlvbi5pbnRlcmltUmVzdWx0cyA9IHRydWU7CiAgICAgIHJlY29nbml0aW9uLm1heEFsdGVybmF0aXZlcyA9IDEwOwogICAgICByZWNvZ25pdGlvbi5jb250aW51b3VzID0gdGhpcy5jb250aW51b3VzOwogICAgICByZWNvZ25pdGlvbi5vbnJlc3VsdCA9IGV2ZW50ID0+IHsKICAgICAgICBsZXQgaW50ZXJpbVRyYW5zY3JpcHQgPSAnJzsKICAgICAgICBmb3IgKGxldCBpID0gZXZlbnQucmVzdWx0SW5kZXgsIGxlbiA9IGV2ZW50LnJlc3VsdHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIGxldCB0cmFuc2NyaXB0ID0gZXZlbnQucmVzdWx0c1tpXVswXS50cmFuc2NyaXB0OwogICAgICAgICAgaWYgKGV2ZW50LnJlc3VsdHNbaV0uaXNGaW5hbCkgewogICAgICAgICAgICBmaW5hbFRyYW5zY3JpcHQgKz0gdHJhbnNjcmlwdDsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGludGVyaW1UcmFuc2NyaXB0ICs9IHRyYW5zY3JpcHQ7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKCJ0cmFuc2NyaXB0OiAiICsgaW50ZXJpbVRyYW5zY3JpcHQpOwogICAgICAgIHRoaXMud29yZHNTcG9rZW4gPSBmaW5hbFRyYW5zY3JpcHQ7CiAgICAgICAgdGhpcy5vdXRwdXQgPSB0aGlzLndvcmRzU3Bva2VuICs9IGludGVyaW1UcmFuc2NyaXB0OwogICAgICAgIHRoaXMudXNhYmxlT3V0cHV0ID0gdGhpcy5vdXRwdXQgLT0gdGhpcy53b3Jkc1Nwb2tlbjsKICAgICAgICB0aGlzLndvcmRDb3VudCA9IHRoaXMuY291bnRXb3Jkcyh0aGlzLm91dHB1dCk7CiAgICAgICAgdGhpcy50b3RhbFdvcmRzID0gdGhpcy53b3JkQ291bnQ7CiAgICAgIH07CiAgICAgIHJlY29nbml0aW9uLnN0YXJ0KCk7CiAgICAgIGlmICh0aGlzLnN0b3AgPT0gZmFsc2UpIHsKICAgICAgICB0aGlzLmluaXRpYWxUaW1lID0gRGF0ZS5ub3coKTsKICAgICAgICB0aGlzLmdyYWJUaW1lSW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5ncmFiVGltZSwgMTAwMCk7CiAgICAgICAgdGhpcy5yZWdpc3RlcldQTUludGVydmFsID0gd2luZG93LnNldEludGVydmFsKHRoaXMucmVnaXN0ZXJXUE0sIDEwMDApOwogICAgICB9CiAgICAgIGlmICh0aGlzLnN0b3AgPT0gdHJ1ZSkgewogICAgICAgIHJlY29nbml0aW9uLnN0b3AoKTsKICAgICAgICB0aGlzLnN0b3AgPSBmYWxzZTsKICAgICAgICBjb25zb2xlLmxvZygic3RvcHBlZD8iKTsKICAgICAgICB0aGlzLmNvbnRpbnVvdXMgPSB0cnVlOwogICAgICB9CiAgICB9LAogICAgZ3JhYlRpbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy50aW1lRGlmZmVyZW5jZSA9IERhdGUubm93KCkgLSB0aGlzLmluaXRpYWxUaW1lOwogICAgICB2YXIgZm9ybWF0dGVkID0gY29udmVydFRpbWUodGhpcy50aW1lRGlmZmVyZW5jZSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aW1lcicpLmlubmVySFRNTCA9ICcnICsgZm9ybWF0dGVkOwogICAgICB0aGlzLnRpbWVFbGFwc2VkID0gdGhpcy50aW1lRGlmZmVyZW5jZTsKICAgICAgY29uc29sZS5sb2coIm9nIHRpbWUgZWxhcHNlZCAiICsgdGhpcy50aW1lRWxhcHNlZCk7CiAgICAgIHJldHVybiB0aGlzLnRpbWVFbGFwc2VkOwogICAgICBmdW5jdGlvbiBjb252ZXJ0VGltZShtaWxpc2Vjb25kcykgewogICAgICAgIHZhciB0b3RhbFNlY29uZHMgPSBNYXRoLmZsb29yKG1pbGlzZWNvbmRzIC8gMTAwMCk7CiAgICAgICAgdmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKHRvdGFsU2Vjb25kcyAvIDYwKTsKICAgICAgICB2YXIgc2Vjb25kcyA9IHRvdGFsU2Vjb25kcyAtIG1pbnV0ZXMgKiA2MDsKICAgICAgICByZXR1cm4gbWludXRlcyArICc6JyArIHNlY29uZHM7CiAgICAgIH0KICAgIH0sCiAgICBjb3VudFdvcmRzOiBmdW5jdGlvbiAoc3RyKSB7CiAgICAgIGNvbnN0IGFyciA9IHN0ci5zcGxpdCgnICcpOwogICAgICByZXR1cm4gYXJyLmZpbHRlcih3b3JkID0+IHdvcmQgIT09ICcnKS5sZW5ndGg7CiAgICB9LAogICAgcmVnaXN0ZXJXUE06IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy53cG0gPSBNYXRoLnJvdW5kKHRoaXMud29yZENvdW50IC8gKHRoaXMudGltZUVsYXBzZWQgLyAxMDAwKSAqIDYwKTsKICAgICAgY29uc29sZS5sb2coInRpbWUgZWxhcHNlZCAiICsgdGhpcy50aW1lRWxhcHNlZCk7CiAgICAgIGNvbnNvbGUubG9nKCJ3b3JkIGNvdW50ICIgKyB0aGlzLndvcmRDb3VudCk7CiAgICB9LAogICAgZ2V0RW1vdGlvblN0YXRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHBhcmFsbGVsZG90cy5hcGlLZXkgPSAiaEw3ck9JaGdoS0xadHJJNncwNGNGanhWdkFPSFE3QmlOaGpNTEFWbk1QdyI7CiAgICAgIHBhcmFsbGVsZG90cy5lbW90aW9uKHRoaXMudXNhYmxlT3V0cHV0LCAiZW4iKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgbGV0IG9iaiA9IEpTT04ucGFyc2UocmVzcG9uc2UpOwogICAgICAgIGNvbnNvbGUubG9nKG9iaik7CiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIHN0b3BWb2ljZUNvbnRyb2w6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5jb250aW51b3VzID0gZmFsc2U7CiAgICAgIHRoaXMuc3RvcCA9IHRydWU7CiAgICAgIHRoaXMuaW5pdGlhdGVWb2ljZUNvbnRyb2woKTsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmdyYWJUaW1lSW50ZXJ2YWwpOwogICAgICBjbGVhckludGVydmFsKHRoaXMucmVnaXN0ZXJXUE1JbnRlcnZhbCk7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICB9CiAgfSAvLwp9OyAvLw=="},{"version":3,"names":["paralleldots","name","props","data","msg","wordsSpoken","output","usableOutput","grabTimeInterval","registerWPMInterval","initialTime","time","timeElapsed","timeDifference","wordCount","totalWords","wordCountDividedByTime","stop","wpm","continuous","created","window","SpeechRecognition","webkitSpeechRecognition","recognition","start","methods","initiateVoiceControl","console","log","finalTranscript","interimResults","maxAlternatives","onresult","event","interimTranscript","i","resultIndex","len","results","length","transcript","isFinal","countWords","Date","now","setInterval","grabTime","registerWPM","formatted","convertTime","document","getElementById","innerHTML","miliseconds","totalSeconds","Math","floor","minutes","seconds","str","arr","split","filter","word","round","getEmotionStats","apiKey","emotion","then","response","obj","JSON","parse","catch","error","stopVoiceControl","clearInterval","reset","location","reload"],"sources":["src/components/PublicSpeakingDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>{{ msg }}</h1>\n    <p id=\"timer\">\n\t\t{{ time }} <br>\n\t\tTime\n    </p>\n    <p id=\"totalWords\">\n\t\t{{ totalWords }} <br>\n\t\tTotal Words Detected\n    </p>\n     <p id=\"wpm\">\n\t\t{{ wpm }} <br>\n\t\tOverall Average Words Per Minute\n    </p>\n    <span><button v-on:click=\"initiateVoiceControl\">Start</button><button v-on:click=\"stopVoiceControl\">Stop</button><button v-on:click=\"reset\">Reset</button></span>\n    \n    <p id=\"output\">\n      {{ output }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nimport paralleldots from 'paralleldots'\nexport default {\n  name: 'publicSpeakingDashboard',\n  props: {\n  }, \n  data () {\n\t\treturn {\n\t\t\tmsg: 'Public Speaking Dashboard', \n\t\t\twordsSpoken: '', \n\t\t\toutput: 'Recognized Text',\n\t\t\tusableOutput: '',\n\t\t\tgrabTimeInterval: '', \n\t\t\tregisterWPMInterval: '', \n\t\t\tinitialTime: 0,  \n\t\t\ttime: 0,\n\t\t\ttimeElapsed: 0, \n\t\t\ttimeDifference: 0, \n\t\t\twordCount: 0,\n\t\t\ttotalWords: 0, \n\t\t\twordCountDividedByTime: 0,\n\t\t\tstop: false, \n\t\t\twpm: 0, \n\t\t\tcontinuous: true\n\t\t}\n\t},\n\t\n\tcreated: function () {\n\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\tlet recognition = new window.SpeechRecognition();\n\t\trecognition.start()\n\t}, \n\n\tmethods: {\n\t\n\t\tinitiateVoiceControl: function () {\n\t\t\tconsole.log('voice recognition initiated')\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet finalTranscript = '';\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.interimResults = true; \n\t\t\trecognition.maxAlternatives = 10;\n\t\t\trecognition.continuous = this.continuous;\n\t\t\trecognition.onresult = (event) => {\n\t\t\t\tlet interimTranscript = '';\n\t\t\t\tfor (let i = event.resultIndex, len = event.results.length; i < len; i++) {\n\t\t\t\t\tlet transcript = event.results[i][0].transcript;\n\t\t\t\t\tif (event.results[i].isFinal) {\n\t\t\t\t\t\tfinalTranscript += transcript;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinterimTranscript += transcript;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\"transcript: \" + interimTranscript)\n\t\t\t\tthis.wordsSpoken = finalTranscript\n\t\t\t\tthis.output =  this.wordsSpoken += interimTranscript\n\t\t\t\tthis.usableOutput = this.output -= this.wordsSpoken\n\t\t\t\tthis.wordCount = this.countWords(this.output)\n\t\t\t\tthis.totalWords = this.wordCount\n\t\t\t}\n\t\t\trecognition.start()\n\t\t\t\t\tif (this.stop == false) {\n\t\t\t\t\t\tthis.initialTime = Date.now();\n\t\t\t\t\t\tthis.grabTimeInterval = window.setInterval(this.grabTime, 1000)\n\t\t\t\t\t\tthis.registerWPMInterval = window.setInterval(this.registerWPM, 1000)\n\t\t\t\t\t} \n\t\t\t\t\tif (this.stop == true) {\n\t\t\t\t\t\trecognition.stop()\n\t\t\t\t\t\tthis.stop = false\n\t\t\t\t\t\tconsole.log(\"stopped?\")\n\t\t\t\t\t\tthis.continuous = true\n\t\n\t\t\t\t\t}\n\t\t},\n\t\n\t\tgrabTime: function () {\n\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\tvar formatted = convertTime(this.timeDifference);\n\t\t\tdocument.getElementById('timer').innerHTML = '' + formatted;\n\t\t\tthis.timeElapsed = this.timeDifference\n\t\t\tconsole.log(\"og time elapsed \" + this.timeElapsed)\n\t\t\treturn this.timeElapsed\n\t\t\tfunction convertTime(miliseconds) {\n\t\t\t\tvar totalSeconds = Math.floor(miliseconds/1000);\n\t\t\t\tvar minutes = Math.floor(totalSeconds/60);\n\t\t\t\tvar seconds = totalSeconds - minutes * 60;\n\t\t\t\treturn minutes + ':' + seconds;\n\t\t\t}\n\t\t},\n\t\t\n\t\t\n\t\t\n\t\tcountWords: function (str){\n\t\t\tconst arr = str.split(' ');\n\t\t\treturn arr.filter(word => word !== '').length;\n\t\t}, \n\t\t\n\t\tregisterWPM: function () {\n\t\t\tthis.wpm = Math.round(this.wordCount/(this.timeElapsed/1000) * 60) \n\t\t\tconsole.log(\"time elapsed \" + this.timeElapsed)\t\n\t\t\tconsole.log(\"word count \" + this.wordCount)\n\t\t},\n\t\t\n\t\tgetEmotionStats: function () {\n\t\t\tparalleldots.apiKey = \"hL7rOIhghKLZtrI6w04cFjxVvAOHQ7BiNhjMLAVnMPw\";\n\t\t\tparalleldots.emotion(this.usableOutput,\"en\")\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tlet obj = JSON.parse(response)\n\t\t\t\tconsole.log(obj)\n\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t\t\n\t\t},  \n\t\t\n\t\tstopVoiceControl: function () {\n\t\t\tthis.continuous = false\n\t\t\tthis.stop = true\n\t\t\tthis.initiateVoiceControl()\n\t\t\tclearInterval(this.grabTimeInterval)\n\t\t\tclearInterval(this.registerWPMInterval)\n\t\t}, \n\t\n\t\treset: function () {\n\t\t\tlocation.reload()\n\t\t}\n\t\n\t\n\t\n\t\n\t}//\n}//\t\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"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"}]}