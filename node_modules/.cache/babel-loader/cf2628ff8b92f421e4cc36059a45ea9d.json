{"remainingRequest":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/src/components/PublicSpeakingDashboard.vue","mtime":1680630652000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/babel.config.js","mtime":1680627211000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1680627215000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/babel-loader/lib/index.js","mtime":1680627215000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/cache-loader/dist/cjs.js","mtime":1680627215000},{"path":"/Users/aletheia/Desktop/publicspeakingdashboard/node_modules/vue-loader/lib/index.js","mtime":1680627234000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["paralleldots","name","props","data","msg","msg2","msg3","wordsSpoken","output","grabTimeInterval","registerWPMInterval","getEmotionStatsInterval","initialTime","time","timeElapsed","timeDifference","wordCount","totalWords","wordCountDividedByTime","stop","wpm","anger","fear","excitement","boredom","sadness","happiness","continuous","show","show2","show3","show4","showWPM","WPMSelected","WPMColor","showTextEmotion","textEmotionSelected","textEmotionColor","showVoiceEmotion","voiceEmotionSelected","voiceEmotionColor","showFaceEmotion","faceEmotionSelected","faceEmotionColor","created","window","SpeechRecognition","webkitSpeechRecognition","recognition","start","methods","begin","next","selectWPM","selectTextEmotion","selectVoiceEmotion","selectFaceEmotion","initiateVoiceControl","console","log","finalTranscript","interimResults","maxAlternatives","onresult","event","interimTranscript","i","resultIndex","len","results","length","transcript","isFinal","countWords","Date","now","setInterval","grabTime","registerWPM","getEmotionStats","formatted","convertTime","document","getElementById","innerHTML","miliseconds","totalSeconds","Math","floor","minutes","seconds","str","arr","split","filter","word","round","pd","require","apiKey","emotion","then","response","obj","JSON","parse","Angry","Fear","Excited","Bored","Sad","Happy","catch","error","stopVoiceControl","clearInterval","reset","location","reload"],"sources":["src/components/PublicSpeakingDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1 >{{ msg }}</h1>\n\t\t<p>\n\t\t\t{{ msg2 }} \n\t\t</p>\n\t\t<p>\n\t\t\t{{ msg3 }} \n\t\t</p>\n    <p v-if=\"!showWPM\" id=\"timer\">\n\t\t{{ time }} <br>\n\t\t<b>Time</b>\n    </p>\n    <p v-if=\"!showWPM\" id=\"totalWords\"> \n\t\t{{ totalWords }} <br>\n\t\t<b>Total Words Detected</b>\n    </p>\n     <p v-if=\"!showWPM\" id=\"wpm\">\n\t\t{{ wpm }} <br>\n\t\t<b>Overall Average Words Per Minute</b>\n    </p>\n    <p  v-if=\"!showTextEmotion\" id=\"emotion\">\n\t\tAnger: {{ this.anger }} <br>\n\t\tFear: {{ this.fear}} <br>\n\t\tExcitement: {{ this.excitement }} <br>\n\t\tBoredom: {{ this.boredom}} <br>\n\t\tSadness: {{ this.sadness}} <br>\n\t\tHappiness: {{ this.happiness }}<br>\n\t\t<b>Text Emotion (out of 100)</b>\n    </p>\n    <p  v-if=\"!showVoiceEmotion\" id=\"voiceEmotion\">\n\t\t<b>Voice Analysis Placeholder</b>\n    </p>\n    <p  v-if=\"!showFaceEmotion\" id=\"voiceEmotion\">\n\t\t<b>Face Analysis Placeholder</b>\n    </p>\n    <span><button v-if=\"show3\" v-on:click=\"begin\">Begin</button><button v-if=\"!show4\" v-on:click=\"initiateVoiceControl\">Start</button><button v-if=\"!show2\" v-on:click=\"stopVoiceControl\">Stop</button><button v-if=\"!show2\" v-on:click=\"reset\">Reset</button></span><br>\n    <span><button  v-bind:style=\"{ backgroundColor: WPMColor}\" v-if=\"!show\" v-on:click=\"selectWPM\" class=\"optionsButton\" id=\"optionWPM\">Track Words Per Minute</button><button v-bind:style=\"{ backgroundColor: textEmotionColor}\" v-if=\"!show\" v-on:click=\"selectTextEmotion\" class=\"optionsButton\" id=\"optionTrackEmotionsText\">Track Emotions in Text</button></span><br>\n\t<span><button v-bind:style=\"{ backgroundColor: voiceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectVoiceEmotion\" class=\"optionsButton\" id=\"optionTrackEmotionVoice\">Track Emotions in Voice</button><button v-bind:style=\"{ backgroundColor: faceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectFaceEmotion\" class=\"optionsButton\" id=\"optionTrackEmotionsFace\">Track Emotions in Face</button></span>\n\t<br><button v-if=\"!show\" v-on:click=\"next\">Next</button>\n    <p v-if=\"!show2\" id=\"output\">\n      {{ output }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nimport paralleldots from 'paralleldots'\nexport default {\n  name: 'publicSpeakingDashboard',\n  props: {\n  }, \n  data () {\n\t\treturn {\n\t\t\tmsg: 'Public Speaking Dashboard',\n\t\t\tmsg2: \"An AI-powered tool to help you reflect on your own public speaking and hone your public speaking skills.\",\n\t\t\tmsg3: \"\",\n\t\t\twordsSpoken: '', \n\t\t\toutput: 'Recognized Text',\n\t\t\tgrabTimeInterval: '', \n\t\t\tregisterWPMInterval: '',\n\t\t\tgetEmotionStatsInterval: '',  \n\t\t\tinitialTime: 0,  \n\t\t\ttime: 0,\n\t\t\ttimeElapsed: 0, \n\t\t\ttimeDifference: 0, \n\t\t\twordCount: 0,\n\t\t\ttotalWords: 0, \n\t\t\twordCountDividedByTime: 0,\n\t\t\tstop: false, \n\t\t\twpm: 0,\n\t\t\tanger: '', \n\t\t\tfear: '', \n\t\t\texcitement: '', \n\t\t\tboredom: '', \n\t\t\tsadness: '', \n\t\t\thappiness: '', \n\t\t\tcontinuous: true, \n\t\t\tshow: true, \n\t\t\tshow2: true, \n\t\t\tshow3: true, \n\t\t\tshow4: true,\n\t\t\tshowWPM: true,  \n\t\t\tWPMSelected: false,\n\t\t\tWPMColor: 'lightgray',  \n\t\t\tshowTextEmotion: true, \n\t\t\ttextEmotionSelected: false, \n\t\t\ttextEmotionColor: 'lightgray', \n\t\t\tshowVoiceEmotion: true, \n\t\t\tvoiceEmotionSelected: false, \n\t\t\tvoiceEmotionColor: 'lightgray', \n\t\t\tshowFaceEmotion: true, \n\t\t\tfaceEmotionSelected: false, \n\t\t\tfaceEmotionColor: 'lightgray'\n\t\t}\n\t},\n\t\n\tcreated: function () {\n\t//initiate speech recognition and ask for microphone permission\n\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\tlet recognition = new window.SpeechRecognition();\n\t\trecognition.start()\n\t}, \n\n\tmethods: {\n\t\n\t\tbegin: function () {\n\t\t\tthis.show = false\n\t\t\tthis.show3 = false\n\t\t\tthis.msg2 = ''\n\t\t\tthis.msg3 = 'Select the data you would like to track.'\n\t\t},\n\t\t\n\t\tnext: function () {\n\t\t\tthis.show2 = false\n\t\t\tthis.show4 = false\n\t\t\tthis.show = true\n\t\t\tthis.msg3 = ''\n\t\t\t\n\t\t\tif (this.WPMSelected == true)\t {\n\t\t\t\tthis.showWPM = false\n\t\t\t}\t\n\t\t\t\n\t\t\tif (this.textEmotionSelected == true)\t {\n\t\t\t\tthis.showTextEmotion = false\n\t\t\t}\t\n\t\t\t\n\t\t\tif (this.voiceEmotionSelected == true)\t {\n\t\t\t\tthis.showVoiceEmotion = false\n\t\t\t}\t\n\t\t\t\n\t\t\tif (this.faceEmotionSelected == true)\t {\n\t\t\t\tthis.showFaceEmotion = false\n\t\t\t}\n\t\t\t\n\t\t\tif (this.textEmotionSelected == false && this.WPMSelected == false)\t {\n\t\t\t\tthis.msg2 = 'No input data selected. Please click \"reset\"and start over.'\n\t\t\t}\t\n\t\t},\n\t\t\n\t\tselectWPM: function () {\n\t\t\tthis.WPMSelected = true\n\t\t\tthis.WPMColor = 'lightgreen'\n\t\t},\n\t\t\n\t\tselectTextEmotion: function () {\n\t\t\tthis.textEmotionSelected = true\n\t\t\tthis.textEmotionColor = 'lightgreen'\n\t\t},\n\t\t\n\t\tselectVoiceEmotion: function () {\n\t\t\tthis.voiceEmotionSelected = true\n\t\t\tthis.voiceEmotionColor = 'lightgreen'\n\t\t},\n\t\t\n\t\tselectFaceEmotion: function () {\n\t\t\tthis.faceEmotionSelected = true\n\t\t\tthis.faceEmotionColor = 'lightgreen'\n\t\t},\n\t\n\t\tinitiateVoiceControl: function () {\n\t\t//start listening for words and making a transcript of detected words\n\t\t\tconsole.log('voice recognition initiated')\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet finalTranscript = '';\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.interimResults = true; \n\t\t\trecognition.maxAlternatives = 10;\n\t\t\trecognition.continuous = this.continuous;\n\t\t\trecognition.onresult = (event) => {\n\t\t\t\tlet interimTranscript = '';\n\t\t\t\tfor (let i = event.resultIndex, len = event.results.length; i < len; i++) {\n\t\t\t\t\tlet transcript = event.results[i][0].transcript;\n\t\t\t\t\tif (event.results[i].isFinal) {\n\t\t\t\t\t\tfinalTranscript += transcript;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinterimTranscript += transcript;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.wordsSpoken = finalTranscript\n\t\t\t\tthis.output =  this.wordsSpoken += interimTranscript\n\t\t\t\tthis.wordCount = this.countWords(this.output)\n\t\t\t\tthis.totalWords = this.wordCount\n\t\t\t}\n\t\t\trecognition.start()\n\t\t\t\t\tif (this.stop == false) {\n\t\t\t\t\t\tconsole.log(\"app started\")\n\t\t\t\t\t\tthis.initialTime = Date.now();\n\t\t\t\t\t\tthis.grabTimeInterval = window.setInterval(this.grabTime, 1000)\n\t\t\t\t\t\tthis.registerWPMInterval = window.setInterval(this.registerWPM, 1000)\n\t\t\t\t\t\tthis.getEmotionStatsInterval = window.setInterval(this.getEmotionStats, 5000)\n\t\t\t\t\t} \n\t\t\t\t\tif (this.stop == true) {\n\t\t\t\t\t\trecognition.stop()\n\t\t\t\t\t\tthis.stop = false\n\t\t\t\t\t\tthis.continuous = true\n\t\t\t\t\t\tconsole.log(\"app stopped\")\n\t\n\t\t\t\t\t}\n\t\t},\n\t\n\t\tgrabTime: function () {\n\t\t//keep track of time in both milliseconds as well as minutes and seconds\n\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\tvar formatted = convertTime(this.timeDifference);\n\t\t\tdocument.getElementById('timer').innerHTML = '' + formatted;\n\t\t\tconsole.log(formatted)\n\t\t\tthis.timeElapsed = this.timeDifference\n\t\t\treturn this.timeElapsed\n\t\t\tfunction convertTime(miliseconds) {\n\t\t\t\tvar totalSeconds = Math.floor(miliseconds/1000);\n\t\t\t\tvar minutes = Math.floor(totalSeconds/60);\n\t\t\t\tvar seconds = totalSeconds - minutes * 60;\n\t\t\t\treturn minutes + ':' + seconds;\n\t\t\t}\n\t\t},\n\t\t\n\t\tcountWords: function (str){\n\t\t//count how many words are in the transcript of detected words\n\t\t\tconst arr = str.split(' ');\n\t\t\treturn arr.filter(word => word !== '').length;\n\t\t}, \n\t\t\n\t\tregisterWPM: function () {\n\t\t//calculate number of words per minute--at one second intervals\n\t\t\tthis.wpm = Math.round(this.wordCount/(this.timeElapsed/1000) * 60) \n\t\t},\n\t\t\n\t\tgetEmotionStats: function () {\n\t\t//send transcript data to be evaluated as per emotional content\n\t\t\tconst pd = require('paralleldots' || paralleldots)\n\t\t\tpd.apiKey = \"hL7rOIhghKLZtrI6w04cFjxVvAOHQ7BiNhjMLAVnMPw\";\n\t\t\tpd.emotion(this.wordsSpoken,\"en\")\n\t\t\t.then((response) => {\n\t\t\t\tlet obj = JSON.parse(response)\n\t\t\t\tthis.anger = Math.round(obj.emotion.Angry * 100) \n\t\t\t\tthis.fear = Math.round(obj.emotion.Fear * 100) \n\t\t\t\tthis.excitement = Math.round(obj.emotion.Excited * 100)\n\t\t\t\tthis.boredom = Math.round(obj.emotion.Bored * 100)\n\t\t\t\tthis.sadness = Math.round(obj.emotion.Sad * 100)\n\t\t\t\tthis.happiness = Math.round(obj.emotion.Happy * 100)\n\t\t\t\tconsole.log(\"emotion data retrieved\" + response)\n\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t\t\n\t\t},  \n\t\t\n\t\tstopVoiceControl: function () {\n\t\t//reset speech recognition so it can stop and clear original timers\n\t\t\tthis.continuous = false\n\t\t\tthis.stop = true\n\t\t\tthis.initiateVoiceControl()\n\t\t\tclearInterval(this.grabTimeInterval)\n\t\t\tclearInterval(this.registerWPMInterval)\n\t\t\tclearInterval(this.getEmotionStatsInterval)\n\t\t}, \n\t\n\t\treset: function () {\n\t\t\tlocation.reload()\n\t\t}\n\t\n\t\n\t\n\t\n\t}//\n}//\t\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.optionsButton {\nheight: 150px;\nwidth: 150px; \npadding: 12px; \nfont-size: 25px; \nmargin: 20px\n\n}\n\n#optionWPM {\n\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"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"}]}